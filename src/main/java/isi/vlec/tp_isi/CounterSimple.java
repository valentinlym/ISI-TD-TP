/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package isi.vlec.tp_isi;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author vaal
 */
public class CounterSimple extends javax.swing.JFrame {

    private enum STATE{
        START(true, false, false),
        STOP(false, true, true);
    
        private boolean cbStart, cbStop, timerActive;

        private STATE(boolean cbStart, boolean cbStop, boolean timerActive) {
            this.cbStart = cbStart;
            this.cbStop = cbStop;
            this.timerActive = timerActive;
        }

        public boolean isCbStart() {
            return cbStart;
        }
        public boolean isCbStop() {
            return cbStop;
        }
        public boolean isTimerActive() {
            return cbStop;
        }
    }
    
    private STATE state;
    public int count;
    
    
    private Timer timerIncrement;
    private final int MAX_COUNTER = 30;
    
    /**
     * Creates new form CounterSimple
     */
    public CounterSimple() {
        initComponents();
        initTimer();
        initStateMachine();
    }
    
    public void initStateMachine(){
        state = STATE.START;
        count = 0;
        activateState(state);
    }
    
    public void activateState(STATE toActivate){
        cbStart.setEnabled(toActivate.isCbStart());
        cbStop.setEnabled(toActivate.isCbStop());
        if (toActivate.timerActive){
            timerIncrement.start();
        } else {
            timerIncrement.stop();
        }
    }
    
    private void initTimer() {
        timerIncrement = new Timer(500, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                timerIncrementActionPerformed(e);
            }
        });
    }
    
    private void timerIncrementActionPerformed(ActionEvent evt) {
        switch (state) {
            case START:
                // impossible
                break;
            case STOP:
                if(count<MAX_COUNTER){
                    state = STATE.STOP;
                    activateState(state);
                    increment();
                    displayCounter();
                }else if(count==MAX_COUNTER){
                    state = STATE.START;
                    activateState(state);
                    displayCounter();
                }
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbStart = new javax.swing.JButton();
        cbStop = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CounterSimple");

        cbStart.setText("Start");
        cbStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStartActionPerformed(evt);
            }
        });

        cbStop.setText("Stop");
        cbStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStopActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(cbStart)
                .addGap(18, 18, 18)
                .addComponent(cbStop)
                .addContainerGap(119, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbStart)
                    .addComponent(cbStop))
                .addGap(130, 130, 130))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStartActionPerformed
        switch (state) {
            case START:
                state = STATE.STOP;
                activateState(state);
                initCounter();
                displayCounter();
                break;
            case STOP:
                throw new IllegalStateException("Button Start cannot be pressed in state " + state);
        }
    }//GEN-LAST:event_cbStartActionPerformed

    private void cbStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStopActionPerformed
        switch (state) {
            case START:
                throw new IllegalStateException("Button stop cannot be pressed in state " + state);
            case STOP:
                state = STATE.START;
                activateState(state);
                displayPouf();
                break;
        }
    }//GEN-LAST:event_cbStopActionPerformed

    private void initCounter() {
        this.count = 0;
    }
    
    private void increment() {
        this.count ++;
    }
    
    private void displayPouf() {
       jLabel1.setText("Pouf !");
    }
    
    private void displayCounter() {
        jLabel1.setText(Integer.toString(this.count));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CounterSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CounterSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CounterSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CounterSimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CounterSimple().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cbStart;
    private javax.swing.JButton cbStop;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
